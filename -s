   .globl main
   .text
main:
   pushq   %rbp
   movq    %rsp, %rbp
   subq $176, %rsp
 leaq string.1,%r10
   movq %r10, -16(%rbp)
 leaq -16(%rbp),%r10
   movq %r10, -24(%rbp)
 leaq string.2,%r10
   movq %r10, -32(%rbp)
 leaq -32(%rbp),%r10
   movq %r10, -40(%rbp)
   movq -24(%rbp), %rdi
   movq -40(%rbp), %rsi
   call strcmp@PLT
   movl %eax, -44(%rbp)
   movl $0, %r10d
   cmpl %r10d, -44(%rbp)
   je    .Lfalse_1
   movl $1, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_1
.Lfalse_1:
.Lend_1:
 leaq string.3,%r10
   movq %r10, -56(%rbp)
 leaq -56(%rbp),%r10
   movq %r10, -64(%rbp)
 leaq string.4,%r10
   movq %r10, -72(%rbp)
 leaq -72(%rbp),%r10
   movq %r10, -80(%rbp)
   movq -64(%rbp), %rdi
   movq -80(%rbp), %rsi
   call strcmp@PLT
   movl %eax, -84(%rbp)
   movl $0, %r10d
   cmpl %r10d, -84(%rbp)
   movl $0, -88(%rbp)
   setge    -88(%rbp)
   movl $0, %r10d
   cmpl %r10d, -88(%rbp)
   je    .Lfalse_2
   movl $2, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_2
.Lfalse_2:
.Lend_2:
 leaq string.5,%r10
   movq %r10, -96(%rbp)
 leaq -96(%rbp),%r10
   movq %r10, -104(%rbp)
   movq -104(%rbp), %rdi
   call puts@PLT
   movl %eax, -108(%rbp)
 leaq string.6,%r10
   movq %r10, -120(%rbp)
 leaq -120(%rbp),%r10
   movq %r10, -128(%rbp)
   movq -128(%rbp), %rdi
   call strlen@PLT
   movq %rax, -136(%rbp)
   movq $0, %r10
   cmpq %r10, -136(%rbp)
   je    .Lfalse_3
   movl $3, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_3
.Lfalse_3:
.Lend_3:
 leaq string.7,%r10
   movq %r10, -144(%rbp)
 leaq -144(%rbp),%r10
   movq %r10, -152(%rbp)
   movq -152(%rbp), %rdi
   call atoi@PLT
   movl %eax, -156(%rbp)
   movl -156(%rbp), %r10d
   movl %r10d, -160(%rbp)
   movl $10, %r10d
   cmpl %r10d, -160(%rbp)
   movl $0, -164(%rbp)
   setne    -164(%rbp)
   movl $0, %r10d
   cmpl %r10d, -164(%rbp)
   je    .Lfalse_4
   movl $4, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_4
.Lfalse_4:
.Lend_4:
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   .section .rodata
   .align 8
string.1:
   .asciz ""abc""
   .section .rodata
   .align 8
string.2:
   .asciz ""abc""
   .section .rodata
   .align 8
string.3:
   .asciz ""ab""
   .section .rodata
   .align 8
string.4:
   .asciz ""xy""
   .section .rodata
   .align 8
string.5:
   .asciz ""Hello, World!""
   .section .rodata
   .align 8
string.6:
   .asciz """"
   .section .rodata
   .align 8
string.7:
   .asciz ""10""
.section .note.GNU-stack,"",@progbits
