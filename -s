   .globl main
   .text
main:
   pushq   %rbp
   movq    %rsp, %rbp
   subq $48, %rsp
   movsd .Ld1(%rip), %xmm15
   comisd    .Lconst_label.1(%rip), %xmm15
   movl $0, -12(%rbp)
   setne    -12(%rbp)
   movl $0, %r10d
   cmpl %r10d, -12(%rbp)
   je    .Lfalse_1
   movl $1, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_1
.Lfalse_1:
.Lend_1:
   movsd .Ld2(%rip), %xmm15
   comisd    .Lconst_label.2(%rip), %xmm15
   movl $0, -16(%rbp)
   setne    -16(%rbp)
   movl $0, %r10d
   cmpl %r10d, -16(%rbp)
   je    .Lfalse_2
   movl $2, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_2
.Lfalse_2:
.Lend_2:
   movsd .Ld3(%rip), %xmm15
   comisd    .Lconst_label.3(%rip), %xmm15
   movl $0, -20(%rbp)
   setne    -20(%rbp)
   movl $0, %r10d
   cmpl %r10d, -20(%rbp)
   je    .Lfalse_3
   movl $3, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_3
.Lfalse_3:
.Lend_3:
   movsd .Ld4(%rip), %xmm15
   comisd    .Ld3(%rip), %xmm15
   movl $0, -24(%rbp)
   setne    -24(%rbp)
   movl $0, %r10d
   cmpl %r10d, -24(%rbp)
   je    .Lfalse_4
   movl $4, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_4
.Lfalse_4:
.Lend_4:
   movsd .Ld5(%rip), %xmm15
   comisd    .Lconst_label.4(%rip), %xmm15
   movl $0, -28(%rbp)
   setne    -28(%rbp)
   movl $0, %r10d
   cmpl %r10d, -28(%rbp)
   je    .Lfalse_5
   movl $5, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_5
.Lfalse_5:
.Lend_5:
   movsd .Ld6(%rip), %xmm15
   comisd    .Ld3(%rip), %xmm15
   movl $0, -32(%rbp)
   setne    -32(%rbp)
   movl $0, %r10d
   cmpl %r10d, -32(%rbp)
   je    .Lfalse_6
   movl $6, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_6
.Lfalse_6:
.Lend_6:
   movsd .Ld7(%rip), %xmm15
   comisd    .Ld5(%rip), %xmm15
   movl $0, -36(%rbp)
   setne    -36(%rbp)
   movl $0, %r10d
   cmpl %r10d, -36(%rbp)
   je    .Lfalse_7
   movl $7, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_7
.Lfalse_7:
.Lend_7:
   xorpd %xmm0,   %xmm0
   movsd %xmm0, %xmm1
   comisd    .Luninitialized(%rip), %xmm1
   je    .Lfalse_8
   movl $8, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_8
.Lfalse_8:
.Lend_8:
   movl $4, %r10d
   movl i(%rip), %r11d
   cmpl %r10d, %r11d
   movl $0, -40(%rbp)
   setne    -40(%rbp)
   movl $0, %r10d
   cmpl %r10d, -40(%rbp)
   je    .Lfalse_9
   movl $9, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_9
.Lfalse_9:
.Lend_9:
   movl $4294967292, %r10d
   movl u(%rip), %r11d
   cmpl %r10d, %r11d
   movl $0, -44(%rbp)
   setne    -44(%rbp)
   movl $0, %r10d
   cmpl %r10d, -44(%rbp)
   je    .Lfalse_10
   movl $10, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_10
.Lfalse_10:
.Lend_10:
   movq $4611686018427389952, %r10
   movq .Ll(%rip), %r11
   cmpq %r10, %r11
   movl $0, -48(%rbp)
   setne    -48(%rbp)
   movl $0, %r10d
   cmpl %r10d, -48(%rbp)
   je    .Lfalse_11
   movl $11, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_11
.Lfalse_11:
.Lend_11:
   movq $18446744073709549568, %r10
   movq .Lul(%rip), %r11
   cmpq %r10, %r11
   movl $0, -52(%rbp)
   setne    -52(%rbp)
   movl $0, %r10d
   cmpl %r10d, -52(%rbp)
   je    .Lfalse_12
   movl $12, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_12
.Lfalse_12:
.Lend_12:
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   .globl d1
   .data
   .align 8
d1:
   .quad 2147483647
   .globl d2
   .data
   .align 8
d2:
   .quad 4294967295
   .globl d3
   .data
   .align 8
d3:
   .quad 4611686018427389440
   .globl d4
   .data
   .align 8
d4:
   .quad 4611686018427389955
   .globl d5
   .data
   .align 8
d5:
   .quad 9223372036854775810
   .globl d6
   .data
   .align 8
d6:
   .quad 4611686018427389955
   .globl d7
   .data
   .align 8
d7:
   .quad 9223372036854776832
   .globl uninitialized
   .bss
   .align 8
uninitialized:
   .zero 8
   .data
   .align 8
i:
   .quad 4.9
   .globl u
   .data
   .align 8
u:
   .quad 4294967292.3
   .globl l
   .data
   .align 8
l:
   .quad 4.61168601842739e+18
   .globl ul
   .data
   .align 8
ul:
   .quad 1.844674407370955e+19
   .section .rodata
   .align 8
.Lconst_label.1:
   .double 2147483647.0
   .section .rodata
   .align 8
.Lconst_label.2:
   .double 4294967295.0
   .section .rodata
   .align 8
.Lconst_label.3:
   .double 4.61168601842739e+18
   .section .rodata
   .align 8
.Lconst_label.4:
   .double 9.223372036854776e+18
.section .note.GNU-stack,"",@progbits
