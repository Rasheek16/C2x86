   .globl sign_extend
   .text
sign_extend:
   pushq   %rbp
   movq    %rsp, %rbp
   subq $48, %rsp
   movl %edi, -8(%rbp)
   movq %rsi, -16(%rbp)
   movslq -8(%rbp), %r11
   movq %r11, -24(%rbp)
   movq -24(%rbp), %r10
   movq %r10, -32(%rbp)
   movq -16(%rbp), %r10
   cmpq %r10, -32(%rbp)
   movl $0, -40(%rbp)
   sete    -40(%rbp)
   movl -40(%rbp), %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   .globl main
   .text
main:
   pushq   %rbp
   movq    %rsp, %rbp
   subq $64, %rsp
   movl $10, %edi
   movq $10, %rsi
   call sign_extend
   movq %rax, -8(%rbp)
   cmpq $0, -8(%rbp)
   movl $0, -16(%rbp)
   sete    -16(%rbp)
   cmpl $0, -16(%rbp)
   je    .Lfalse_1
   movl $1, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_1
.Lfalse_1:
.Lend_1:
   movl $10, -20(%rbp)
   movl -20(%rbp), %r10d
   negl %r10d
   movl %r10d, -20(%rbp)
   movq $10, -24(%rbp)
   movq -24(%rbp), %r10
   negq %r10
   movq %r10, -24(%rbp)
   movl -20(%rbp), %edi
   movq -24(%rbp), %rsi
   call sign_extend
   movq %rax, -32(%rbp)
   cmpq $0, -32(%rbp)
   movl $0, -40(%rbp)
   sete    -40(%rbp)
   cmpl $0, -40(%rbp)
   je    .Lfalse_2
   movl $2, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_2
.Lfalse_2:
.Lend_2:
   movl $100, %r10d
   movslq %r10d, %r11
   movq %r11, -48(%rbp)
   movq -48(%rbp), %r10
   movq %r10, -56(%rbp)
   cmpq $100, -56(%rbp)
   movl $0, -64(%rbp)
   setne    -64(%rbp)
   cmpl $0, -64(%rbp)
   je    .Lfalse_3
   movl $3, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_3
.Lfalse_3:
.Lend_3:
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
.section .note.GNU-stack,"",@progbits
