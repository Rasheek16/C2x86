   .globl main
   .text
main:
   pushq   %rbp
   movq    %rsp, %rbp
   subq $720, %rsp
   movl $0, -12(%rbp)
   movl $1, -16(%rbp)
   movl $2, -20(%rbp)
 leaq -12(%rbp),%r10
   movq %r10, -32(%rbp)
   movq -32(%rbp), %r10
   movq %r10, -40(%rbp)
 leaq -16(%rbp),%r10
   movq %r10, -48(%rbp)
   movq -48(%rbp), %r10
   movq %r10, -40(%rbp)
 leaq -20(%rbp),%r10
   movq %r10, -56(%rbp)
   movq -56(%rbp), %r10
   movq %r10, -32(%rbp)
 leaq -20(%rbp),%r10
   movq %r10, -64(%rbp)
   movq -64(%rbp), %r10
   movq %r10, -72(%rbp)
 leaq -16(%rbp),%r10
   movq %r10, -80(%rbp)
   movq -80(%rbp), %r10
   movq %r10, -72(%rbp)
 leaq -12(%rbp),%r10
   movq %r10, -88(%rbp)
   movq -88(%rbp), %r10
   movq %r10, -64(%rbp)
 leaq -40(%rbp),%r10
   movq %r10, -96(%rbp)
   movq -96(%rbp), %r10
   movq %r10, -104(%rbp)
 leaq -72(%rbp),%r10
   movq %r10, -112(%rbp)
   movq -112(%rbp), %r10
   movq %r10, -104(%rbp)
 leaq -40(%rbp),%r10
   movq %r10, -120(%rbp)
   movq -120(%rbp), %r10
   movq %r10, -96(%rbp)
 leaq -104(%rbp),%r10
   movq %r10, -128(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -136(%rbp)
   movq -128(%rbp), %rax
   movq -136(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -144(%rbp)
   movq -144(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -152(%rbp)
   movl -152(%rbp), %r10d
   movl %r10d, -160(%rbp)
 leaq -40(%rbp),%r10
   movq %r10, -168(%rbp)
   movl -168(%rbp), %r10d
   movl %r10d, -176(%rbp)
 leaq -176(%rbp),%r10
   movq %r10, -184(%rbp)
   movl -184(%rbp), %r10d
   movl %r10d, -192(%rbp)
   movq  -160(%rbp) , %r11
   cmpq -192(%rbp), %r11
   movl $0, -196(%rbp)
   setne    -196(%rbp)
   movl $0, %r10d
   cmpl %r10d, -196(%rbp)
   je    .Lfalse_1
   movl $1, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_1
.Lfalse_1:
.Lend_1:
 leaq -104(%rbp),%r10
   movq %r10, -208(%rbp)
   movl $1, %r10d
   movslq %r10d, %r11
   movq %r11, -216(%rbp)
   movq -208(%rbp), %rax
   movq -216(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -224(%rbp)
   movq -224(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -232(%rbp)
   movl -232(%rbp), %r10d
   movl %r10d, -240(%rbp)
 leaq -72(%rbp),%r10
   movq %r10, -248(%rbp)
   movl -248(%rbp), %r10d
   movl %r10d, -256(%rbp)
 leaq -256(%rbp),%r10
   movq %r10, -264(%rbp)
   movl -264(%rbp), %r10d
   movl %r10d, -272(%rbp)
   movq  -240(%rbp) , %r11
   cmpq -272(%rbp), %r11
   movl $0, -276(%rbp)
   setne    -276(%rbp)
   movl $0, %r10d
   cmpl %r10d, -276(%rbp)
   je    .Lfalse_2
   movl $2, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_2
.Lfalse_2:
.Lend_2:
 leaq -104(%rbp),%r10
   movq %r10, -288(%rbp)
   movl $2, %r10d
   movslq %r10d, %r11
   movq %r11, -296(%rbp)
   movq -288(%rbp), %rax
   movq -296(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -304(%rbp)
   movq -304(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -312(%rbp)
   movl -312(%rbp), %r10d
   movl %r10d, -320(%rbp)
 leaq -40(%rbp),%r10
   movq %r10, -328(%rbp)
   movl -328(%rbp), %r10d
   movl %r10d, -336(%rbp)
 leaq -336(%rbp),%r10
   movq %r10, -344(%rbp)
   movl -344(%rbp), %r10d
   movl %r10d, -352(%rbp)
   movq  -320(%rbp) , %r11
   cmpq -352(%rbp), %r11
   movl $0, -356(%rbp)
   setne    -356(%rbp)
   movl $0, %r10d
   cmpl %r10d, -356(%rbp)
   je    .Lfalse_3
   movl $3, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_3
.Lfalse_3:
.Lend_3:
 leaq -104(%rbp),%r10
   movq %r10, -368(%rbp)
   movl $1, %r10d
   movslq %r10d, %r11
   movq %r11, -376(%rbp)
   movq -368(%rbp), %rax
   movq -376(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -384(%rbp)
   movq -384(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -392(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -400(%rbp)
   movq -392(%rbp), %rax
   movq -400(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -408(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -416(%rbp)
   movq -408(%rbp), %rax
   movq -416(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -424(%rbp)
   movq -424(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -432(%rbp)
 leaq -20(%rbp),%r10
   movq %r10, -440(%rbp)
   movq -440(%rbp), %r10
   cmpq %r10, -432(%rbp)
   movl $0, -444(%rbp)
   setne    -444(%rbp)
   movl $0, %r10d
   cmpl %r10d, -444(%rbp)
   je    .Lfalse_4
   movl $4, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_4
.Lfalse_4:
.Lend_4:
 leaq -104(%rbp),%r10
   movq %r10, -456(%rbp)
   movl $1, %r10d
   movslq %r10d, %r11
   movq %r11, -464(%rbp)
   movq -456(%rbp), %rax
   movq -464(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -472(%rbp)
   movq -472(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -480(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -488(%rbp)
   movq -480(%rbp), %rax
   movq -488(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -496(%rbp)
   movl $1, %r10d
   movslq %r10d, %r11
   movq %r11, -504(%rbp)
   movq -496(%rbp), %rax
   movq -504(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -512(%rbp)
   movq -512(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -520(%rbp)
 leaq -16(%rbp),%r10
   movq %r10, -528(%rbp)
   movq -528(%rbp), %r10
   cmpq %r10, -520(%rbp)
   movl $0, -532(%rbp)
   setne    -532(%rbp)
   movl $0, %r10d
   cmpl %r10d, -532(%rbp)
   je    .Lfalse_5
   movl $5, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_5
.Lfalse_5:
.Lend_5:
 leaq -104(%rbp),%r10
   movq %r10, -544(%rbp)
   movl $2, %r10d
   movslq %r10d, %r11
   movq %r11, -552(%rbp)
   movq -544(%rbp), %rax
   movq -552(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -560(%rbp)
   movq -560(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -568(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -576(%rbp)
   movq -568(%rbp), %rax
   movq -576(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -584(%rbp)
   movl $2, %r10d
   movslq %r10d, %r11
   movq %r11, -592(%rbp)
   movq -584(%rbp), %rax
   movq -592(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -600(%rbp)
   movq -600(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -608(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -616(%rbp)
   movq -608(%rbp), %rax
   movq -616(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -624(%rbp)
   movq -624(%rbp), %rax
   movl  0(%rax) , %r10d
   movl %r10d, -628(%rbp)
   movl $2, %r10d
   cmpl %r10d, -628(%rbp)
   movl $0, -632(%rbp)
   setne    -632(%rbp)
   movl $0, %r10d
   cmpl %r10d, -632(%rbp)
   je    .Lfalse_6
   movl $6, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   jmp  .Lend_6
.Lfalse_6:
.Lend_6:
 leaq -104(%rbp),%r10
   movq %r10, -640(%rbp)
   movl $2, %r10d
   movslq %r10d, %r11
   movq %r11, -648(%rbp)
   movq -640(%rbp), %rax
   movq -648(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -656(%rbp)
   movq -656(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -664(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -672(%rbp)
   movq -664(%rbp), %rax
   movq -672(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -680(%rbp)
   movl $2, %r10d
   movslq %r10d, %r11
   movq %r11, -688(%rbp)
   movq -680(%rbp), %rax
   movq -688(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -696(%rbp)
   movq -696(%rbp), %rax
   movq  0(%rax) , %r10
   movq %r10, -704(%rbp)
   movl $0, %r10d
   movslq %r10d, %r11
   movq %r11, -712(%rbp)
   movq -704(%rbp), %rax
   movq -712(%rbp), %rdx
   leaq (%rax,%rdx,4),  %r10
   movq %r10, -720(%rbp)
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
   movl $0, %eax
   movq   %rbp, %rsp
   popq   %rbp
   ret
.section .note.GNU-stack,"",@progbits
